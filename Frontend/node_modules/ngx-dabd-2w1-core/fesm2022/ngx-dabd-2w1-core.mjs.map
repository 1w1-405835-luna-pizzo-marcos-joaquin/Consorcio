{"version":3,"file":"ngx-dabd-2w1-core.mjs","sources":["../../../projects/ngx-dabd-t1-core/src/modal-confirm/modal-confirm.component.ts","../../../projects/ngx-dabd-t1-core/src/modal-confirm/modal-confirm.component.html","../../../projects/ngx-dabd-t1-core/src/navbar/navbar.component.ts","../../../projects/ngx-dabd-t1-core/src/navbar/navbar.component.html","../../../projects/ngx-dabd-t1-core/src/modals/sidebar-settings.ts","../../../projects/ngx-dabd-t1-core/src/side-navbar/side-navbar.component.ts","../../../projects/ngx-dabd-t1-core/src/side-navbar/side-navbar.component.html","../../../projects/ngx-dabd-t1-core/src/services/modal.service.ts","../../../projects/ngx-dabd-t1-core/src/public-api.ts","../../../projects/ngx-dabd-t1-core/src/ngx-dabd-2w1-core.ts"],"sourcesContent":["import { Component, inject, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-modal-confirm',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './modal-confirm.component.html',\r\n  styleUrl: './modal-confirm.component.scss'\r\n})\r\nexport class ModalConfirmComponent {\r\n\tmodal = inject(NgbActiveModal);\r\n\r\n  @Input() body?: string;\r\n  @Input() title?: string;\r\n  @Input() secondaryTitle?: string;\r\n  @Input() confirm?: string;\r\n  @Input() cancel?: string;\r\n}\r\n","<div class=\"bg-dark\">\r\n  <div class=\"modal-header d-flex justify-content-between\">\r\n    @if (title) {\r\n      <h4 class=\"modal-title\" id=\"modal-title\">{{title}}</h4>\r\n    }\r\n    <a aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n      <i class=\"bi bi-x-lg\"></i>\r\n    </a>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    @if (secondaryTitle) {\r\n      <p>\r\n        <strong>{{ secondaryTitle }}</strong>\r\n      </p>\r\n    }\r\n    <p>\r\n      {{ body }}\r\n    </p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary\"\r\n      (click)=\"modal.dismiss()\"\r\n    >\r\n      {{ cancel ?? \"Cancelar\" }}\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close()\">\r\n      {{ confirm ?? \"Aceptar\" }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MenuItems } from '../modals/menu';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.scss'\r\n})\r\nexport class NavbarComponent {\r\n  @Input() menuItems: MenuItems[] = [];\r\n  @Output() menuVisited = new EventEmitter<string>();\r\n\r\n  onClick(key?: string): void {\r\n    this.menuVisited.emit(key);\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar sticky-top navbar-expand-lg bg-dark border-bottom border-body\"\r\n  data-bs-theme=\"dark\"\r\n>\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">AppLogo</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarScroll\"\r\n      aria-controls=\"navbarScroll\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n      <ul class=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\">\r\n        @for (item of menuItems; track $index) {\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            [class.disabled]=\"item.disabled ?? false\"\r\n            [class.active]=\"item.active\"\r\n            aria-current=\"page\"\r\n            (click)=\"onClick(item.key)\"\r\n            href=\"#\"\r\n          >\r\n            {{ item.name }}\r\n          </a>\r\n        </li>\r\n        }\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","export enum SidebarPlacement {\r\n  LEFT,\r\n  RIGHT\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SidebarPlacement } from '../modals/sidebar-settings';\r\nimport { MenuItems } from '../modals/menu';\r\n\r\n@Component({\r\n  selector: 'app-side-navbar',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './side-navbar.component.html',\r\n  styleUrl: './side-navbar.component.scss'\r\n})\r\nexport class SideNavbarComponent {\r\n  @Input() title?: string;\r\n  @Input() showClose: boolean = true;\r\n  @Input() placement: SidebarPlacement = SidebarPlacement.LEFT;\r\n  @Input() sidebarItems: MenuItems[] = [];\r\n  @Output() sidebarVisited = new EventEmitter<string>();\r\n\r\n  placements = SidebarPlacement;\r\n\r\n  onClick(key?: string): void {\r\n    this.sidebarVisited.emit(key);\r\n  }\r\n}\r\n","<!-- @if (sidebarItems.length) {\r\n  <div class=\"sidebar-wrapper\">\r\n    <nav class=\"nav bg-dark flex-column\" data-bs-theme=\"dark\">\r\n      @for (item of sidebarItems; track $index) {\r\n      <a\r\n        class=\"nav-link\"\r\n        [class.disabled]=\"item.disabled ?? false\"\r\n        [class.active]=\"item.active\"\r\n        aria-current=\"page\"\r\n        (click)=\"onClick(item.key)\"\r\n        href=\"#\"\r\n      >\r\n        @if (item.icon) {\r\n        <i class=\"bi-{{ item.icon }}\"></i>\r\n        }\r\n        {{ item.name }}\r\n      </a>\r\n      }\r\n    </nav>\r\n\r\n    <ng-content></ng-content>\r\n  </div>\r\n} -->\r\n\r\n<div class=\"sidebar-wrapper\">\r\n  <div class=\"sidebar-menu bg-dark\">\r\n    <a\r\n      class=\"sidebar-menu-action pt-5\"\r\n      data-bs-toggle=\"offcanvas\"\r\n      href=\"#sidebar\"\r\n      role=\"button\"\r\n      aria-controls=\"sidebar\"\r\n      data-bs-offcanvas\r\n    >\r\n      <i class=\"bi-arrow-right-circle-fill\"></i>\r\n    </a>\r\n    <div\r\n      class=\"bg-dark offcanvas\"\r\n      [class.offcanvas-start]=\"placement == placements.LEFT\"\r\n      [class.offcanvas-end]=\"placement == placements.RIGHT\"\r\n      tabindex=\"-1\"\r\n      id=\"sidebar\"\r\n      aria-labelledby=\"sidebarLabel\"\r\n    >\r\n      <div class=\"offcanvas-header mt-2 d-flex justify-content-between\">\r\n        @if (title) {\r\n        <h5 class=\"offcanvas-title fs-3\" id=\"sidebarLabel\">\r\n          {{ title }}\r\n        </h5>\r\n\r\n        } @if (showClose) {\r\n        <a data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">\r\n          <i class=\"bi bi-x-lg\"></i>\r\n        </a>\r\n        }\r\n      </div>\r\n      <div class=\"offcanvas-body\">\r\n        <div class=\"ms-3\">\r\n          @for (item of sidebarItems; track $index) { @if (item.icon) {\r\n          <i class=\"bi-{{ item.icon }}\"></i>\r\n          }\r\n\r\n          <a data-bs-dismiss=\"offcanvas\" (click)=\"onClick(item.key)\"\r\n            ><span class=\"fs-5\">{{ item.name }}</span></a\r\n          >\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { from, Observable } from 'rxjs';\r\nimport { ModalConfirmComponent } from '../modal-confirm/modal-confirm.component';\r\nimport { ModalSettings } from '../modals/modal-settings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n  private readonly ngModalService = inject(NgbModal);\r\n  private modalRef?: NgbModalRef;\r\n\r\n  showConfirm(settings: ModalSettings): Observable<any> {\r\n    this.modalRef = this.ngModalService.open(ModalConfirmComponent);\r\n    this.modalRef.componentInstance.body = settings.body;\r\n    this.modalRef.componentInstance.title = settings.title;\r\n    this.modalRef.componentInstance.secondaryTitle = settings.secondaryTitle;\r\n    this.modalRef.componentInstance.confirm = settings.confirmText;\r\n    this.modalRef.componentInstance.cancel = settings.cancelText;\r\n\r\n    return from(this.modalRef.result);\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-dabd-t1-core\r\n */\r\n\r\n// components\r\nexport * from './modal-confirm/modal-confirm.component';\r\nexport * from './navbar/navbar.component';\r\nexport * from './side-navbar/side-navbar.component';\r\n\r\n// services\r\nexport * from './services/modal.service';\r\n\r\n// models\r\nexport * from './modals/menu';\r\nexport * from './modals/modal-settings';\r\nexport * from './modals/sidebar-settings';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}