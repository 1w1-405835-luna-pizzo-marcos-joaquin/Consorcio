import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
export class NavbarComponent {
    menuItems = [];
    menuVisited = new EventEmitter();
    onClick(key) {
        this.menuVisited.emit(key);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.6", ngImport: i0, type: NavbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.6", type: NavbarComponent, isStandalone: true, selector: "app-navbar", inputs: { menuItems: "menuItems" }, outputs: { menuVisited: "menuVisited" }, ngImport: i0, template: "<nav\r\n  class=\"navbar sticky-top navbar-expand-lg bg-dark border-bottom border-body\"\r\n  data-bs-theme=\"dark\"\r\n>\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">AppLogo</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarScroll\"\r\n      aria-controls=\"navbarScroll\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n      <ul class=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\">\r\n        @for (item of menuItems; track $index) {\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            [class.disabled]=\"item.disabled ?? false\"\r\n            [class.active]=\"item.active\"\r\n            aria-current=\"page\"\r\n            (click)=\"onClick(item.key)\"\r\n            href=\"#\"\r\n          >\r\n            {{ item.name }}\r\n          </a>\r\n        </li>\r\n        }\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n", styles: [""] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.6", ngImport: i0, type: NavbarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-navbar', standalone: true, imports: [], template: "<nav\r\n  class=\"navbar sticky-top navbar-expand-lg bg-dark border-bottom border-body\"\r\n  data-bs-theme=\"dark\"\r\n>\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">AppLogo</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarScroll\"\r\n      aria-controls=\"navbarScroll\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n      <ul class=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\">\r\n        @for (item of menuItems; track $index) {\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            [class.disabled]=\"item.disabled ?? false\"\r\n            [class.active]=\"item.active\"\r\n            aria-current=\"page\"\r\n            (click)=\"onClick(item.key)\"\r\n            href=\"#\"\r\n          >\r\n            {{ item.name }}\r\n          </a>\r\n        </li>\r\n        }\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n" }]
        }], propDecorators: { menuItems: [{
                type: Input
            }], menuVisited: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1kYWJkLXQxLWNvcmUvc3JjL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWRhYmQtdDEtY29yZS9zcmMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVV2RSxNQUFNLE9BQU8sZUFBZTtJQUNqQixTQUFTLEdBQWdCLEVBQUUsQ0FBQztJQUMzQixXQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQUVuRCxPQUFPLENBQUMsR0FBWTtRQUNsQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QixDQUFDO3VHQU5VLGVBQWU7MkZBQWYsZUFBZSxtSkNWNUIsb3JDQXFDQTs7MkZEM0JhLGVBQWU7a0JBUDNCLFNBQVM7K0JBQ0UsWUFBWSxjQUNWLElBQUksV0FDUCxFQUFFOzhCQUtGLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0ksV0FBVztzQkFBcEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1lbnVJdGVtcyB9IGZyb20gJy4uL21vZGFscy9tZW51JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLW5hdmJhcicsXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbXSxcclxuICB0ZW1wbGF0ZVVybDogJy4vbmF2YmFyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybDogJy4vbmF2YmFyLmNvbXBvbmVudC5zY3NzJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTmF2YmFyQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBtZW51SXRlbXM6IE1lbnVJdGVtc1tdID0gW107XHJcbiAgQE91dHB1dCgpIG1lbnVWaXNpdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcblxyXG4gIG9uQ2xpY2soa2V5Pzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICB0aGlzLm1lbnVWaXNpdGVkLmVtaXQoa2V5KTtcclxuICB9XHJcbn1cclxuIiwiPG5hdlxyXG4gIGNsYXNzPVwibmF2YmFyIHN0aWNreS10b3AgbmF2YmFyLWV4cGFuZC1sZyBiZy1kYXJrIGJvcmRlci1ib3R0b20gYm9yZGVyLWJvZHlcIlxyXG4gIGRhdGEtYnMtdGhlbWU9XCJkYXJrXCJcclxuPlxyXG4gIDxkaXYgY2xhc3M9XCJjb250YWluZXItZmx1aWRcIj5cclxuICAgIDxhIGNsYXNzPVwibmF2YmFyLWJyYW5kXCIgaHJlZj1cIiNcIj5BcHBMb2dvPC9hPlxyXG4gICAgPGJ1dHRvblxyXG4gICAgICBjbGFzcz1cIm5hdmJhci10b2dnbGVyXCJcclxuICAgICAgdHlwZT1cImJ1dHRvblwiXHJcbiAgICAgIGRhdGEtYnMtdG9nZ2xlPVwiY29sbGFwc2VcIlxyXG4gICAgICBkYXRhLWJzLXRhcmdldD1cIiNuYXZiYXJTY3JvbGxcIlxyXG4gICAgICBhcmlhLWNvbnRyb2xzPVwibmF2YmFyU2Nyb2xsXCJcclxuICAgICAgYXJpYS1leHBhbmRlZD1cImZhbHNlXCJcclxuICAgICAgYXJpYS1sYWJlbD1cIlRvZ2dsZSBuYXZpZ2F0aW9uXCJcclxuICAgID5cclxuICAgICAgPHNwYW4gY2xhc3M9XCJuYXZiYXItdG9nZ2xlci1pY29uXCI+PC9zcGFuPlxyXG4gICAgPC9idXR0b24+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlXCIgaWQ9XCJuYXZiYXJTY3JvbGxcIj5cclxuICAgICAgPHVsIGNsYXNzPVwibmF2YmFyLW5hdiBtZS1hdXRvIG15LTIgbXktbGctMCBuYXZiYXItbmF2LXNjcm9sbFwiPlxyXG4gICAgICAgIEBmb3IgKGl0ZW0gb2YgbWVudUl0ZW1zOyB0cmFjayAkaW5kZXgpIHtcclxuICAgICAgICA8bGkgY2xhc3M9XCJuYXYtaXRlbVwiPlxyXG4gICAgICAgICAgPGFcclxuICAgICAgICAgICAgY2xhc3M9XCJuYXYtbGlua1wiXHJcbiAgICAgICAgICAgIFtjbGFzcy5kaXNhYmxlZF09XCJpdGVtLmRpc2FibGVkID8/IGZhbHNlXCJcclxuICAgICAgICAgICAgW2NsYXNzLmFjdGl2ZV09XCJpdGVtLmFjdGl2ZVwiXHJcbiAgICAgICAgICAgIGFyaWEtY3VycmVudD1cInBhZ2VcIlxyXG4gICAgICAgICAgICAoY2xpY2spPVwib25DbGljayhpdGVtLmtleSlcIlxyXG4gICAgICAgICAgICBocmVmPVwiI1wiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHt7IGl0ZW0ubmFtZSB9fVxyXG4gICAgICAgICAgPC9hPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgICAgfVxyXG4gICAgICA8L3VsPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbjwvbmF2PlxyXG4iXX0=